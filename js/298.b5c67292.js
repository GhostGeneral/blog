(window.webpackJsonp=window.webpackJsonp||[]).push([[298],{988:function(n,e){n.exports='### 51. N-Queens\n\nThe n-queens puzzle is the problem of placing `n` queens on an `n x n` chessboard such that no two queens attack each other.\n\nGiven an integer n, return all distinct solutions to the n-queens puzzle.\n\nEach solution contains a distinct board configuration of the n-queens\' placement, where \'Q\' and \'.\' both indicate a queen and an empty space, respectively.\n\nExample 1:\n\n```js\nInput: n = 4\nOutput: [[".Q..","...Q","Q...","..Q."],["..Q.","Q...","...Q",".Q.."]]\n. Q . .            . . Q .\n. . . Q     or     Q . . .\nQ . . .            . . . Q\n. . Q .            . Q . .\n```\n\nExplanation: There exist two distinct solutions to the 4-queens puzzle as shown above\n\nExample 2:\n\n```js\nInput: n = 1\nOutput: [["Q"]]\n```\n\n* Constraints:\n  * 1 <= n <= 9\n\n### Analyze\n\n```js\n/**\n * @param {number} n\n * @return {string[][]}\n */\nvar solveNQueens = function(n) {\n\n};\n```'}}]);